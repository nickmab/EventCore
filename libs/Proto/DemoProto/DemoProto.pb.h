// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DemoProto.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_DemoProto_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_DemoProto_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_DemoProto_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_DemoProto_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_DemoProto_2eproto;
namespace demoproto {
class NumericMessage;
class NumericMessageDefaultTypeInternal;
extern NumericMessageDefaultTypeInternal _NumericMessage_default_instance_;
class TextualMessage;
class TextualMessageDefaultTypeInternal;
extern TextualMessageDefaultTypeInternal _TextualMessage_default_instance_;
}  // namespace demoproto
PROTOBUF_NAMESPACE_OPEN
template<> ::demoproto::NumericMessage* Arena::CreateMaybeMessage<::demoproto::NumericMessage>(Arena*);
template<> ::demoproto::TextualMessage* Arena::CreateMaybeMessage<::demoproto::TextualMessage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace demoproto {

// ===================================================================

class NumericMessage :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:demoproto.NumericMessage) */ {
 public:
  NumericMessage();
  virtual ~NumericMessage();

  NumericMessage(const NumericMessage& from);
  NumericMessage(NumericMessage&& from) noexcept
    : NumericMessage() {
    *this = ::std::move(from);
  }

  inline NumericMessage& operator=(const NumericMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline NumericMessage& operator=(NumericMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NumericMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NumericMessage* internal_default_instance() {
    return reinterpret_cast<const NumericMessage*>(
               &_NumericMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(NumericMessage& a, NumericMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(NumericMessage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NumericMessage* New() const final {
    return CreateMaybeMessage<NumericMessage>(nullptr);
  }

  NumericMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NumericMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NumericMessage& from);
  void MergeFrom(const NumericMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NumericMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "demoproto.NumericMessage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_DemoProto_2eproto);
    return ::descriptor_table_DemoProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kADoubleFieldNumber = 2,
    kAnIntegerFieldNumber = 1,
  };
  // double a_double = 2;
  void clear_a_double();
  double a_double() const;
  void set_a_double(double value);
  private:
  double _internal_a_double() const;
  void _internal_set_a_double(double value);
  public:

  // int32 an_integer = 1;
  void clear_an_integer();
  ::PROTOBUF_NAMESPACE_ID::int32 an_integer() const;
  void set_an_integer(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_an_integer() const;
  void _internal_set_an_integer(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:demoproto.NumericMessage)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double a_double_;
  ::PROTOBUF_NAMESPACE_ID::int32 an_integer_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_DemoProto_2eproto;
};
// -------------------------------------------------------------------

class TextualMessage :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:demoproto.TextualMessage) */ {
 public:
  TextualMessage();
  virtual ~TextualMessage();

  TextualMessage(const TextualMessage& from);
  TextualMessage(TextualMessage&& from) noexcept
    : TextualMessage() {
    *this = ::std::move(from);
  }

  inline TextualMessage& operator=(const TextualMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TextualMessage& operator=(TextualMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TextualMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TextualMessage* internal_default_instance() {
    return reinterpret_cast<const TextualMessage*>(
               &_TextualMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TextualMessage& a, TextualMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(TextualMessage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TextualMessage* New() const final {
    return CreateMaybeMessage<TextualMessage>(nullptr);
  }

  TextualMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TextualMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TextualMessage& from);
  void MergeFrom(const TextualMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TextualMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "demoproto.TextualMessage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_DemoProto_2eproto);
    return ::descriptor_table_DemoProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kASentenceFieldNumber = 2,
    kIsInterestingFieldNumber = 1,
  };
  // string a_sentence = 2;
  void clear_a_sentence();
  const std::string& a_sentence() const;
  void set_a_sentence(const std::string& value);
  void set_a_sentence(std::string&& value);
  void set_a_sentence(const char* value);
  void set_a_sentence(const char* value, size_t size);
  std::string* mutable_a_sentence();
  std::string* release_a_sentence();
  void set_allocated_a_sentence(std::string* a_sentence);
  private:
  const std::string& _internal_a_sentence() const;
  void _internal_set_a_sentence(const std::string& value);
  std::string* _internal_mutable_a_sentence();
  public:

  // bool is_interesting = 1;
  void clear_is_interesting();
  bool is_interesting() const;
  void set_is_interesting(bool value);
  private:
  bool _internal_is_interesting() const;
  void _internal_set_is_interesting(bool value);
  public:

  // @@protoc_insertion_point(class_scope:demoproto.TextualMessage)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr a_sentence_;
  bool is_interesting_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_DemoProto_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NumericMessage

// int32 an_integer = 1;
inline void NumericMessage::clear_an_integer() {
  an_integer_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NumericMessage::_internal_an_integer() const {
  return an_integer_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NumericMessage::an_integer() const {
  // @@protoc_insertion_point(field_get:demoproto.NumericMessage.an_integer)
  return _internal_an_integer();
}
inline void NumericMessage::_internal_set_an_integer(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  an_integer_ = value;
}
inline void NumericMessage::set_an_integer(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_an_integer(value);
  // @@protoc_insertion_point(field_set:demoproto.NumericMessage.an_integer)
}

// double a_double = 2;
inline void NumericMessage::clear_a_double() {
  a_double_ = 0;
}
inline double NumericMessage::_internal_a_double() const {
  return a_double_;
}
inline double NumericMessage::a_double() const {
  // @@protoc_insertion_point(field_get:demoproto.NumericMessage.a_double)
  return _internal_a_double();
}
inline void NumericMessage::_internal_set_a_double(double value) {
  
  a_double_ = value;
}
inline void NumericMessage::set_a_double(double value) {
  _internal_set_a_double(value);
  // @@protoc_insertion_point(field_set:demoproto.NumericMessage.a_double)
}

// -------------------------------------------------------------------

// TextualMessage

// bool is_interesting = 1;
inline void TextualMessage::clear_is_interesting() {
  is_interesting_ = false;
}
inline bool TextualMessage::_internal_is_interesting() const {
  return is_interesting_;
}
inline bool TextualMessage::is_interesting() const {
  // @@protoc_insertion_point(field_get:demoproto.TextualMessage.is_interesting)
  return _internal_is_interesting();
}
inline void TextualMessage::_internal_set_is_interesting(bool value) {
  
  is_interesting_ = value;
}
inline void TextualMessage::set_is_interesting(bool value) {
  _internal_set_is_interesting(value);
  // @@protoc_insertion_point(field_set:demoproto.TextualMessage.is_interesting)
}

// string a_sentence = 2;
inline void TextualMessage::clear_a_sentence() {
  a_sentence_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& TextualMessage::a_sentence() const {
  // @@protoc_insertion_point(field_get:demoproto.TextualMessage.a_sentence)
  return _internal_a_sentence();
}
inline void TextualMessage::set_a_sentence(const std::string& value) {
  _internal_set_a_sentence(value);
  // @@protoc_insertion_point(field_set:demoproto.TextualMessage.a_sentence)
}
inline std::string* TextualMessage::mutable_a_sentence() {
  // @@protoc_insertion_point(field_mutable:demoproto.TextualMessage.a_sentence)
  return _internal_mutable_a_sentence();
}
inline const std::string& TextualMessage::_internal_a_sentence() const {
  return a_sentence_.GetNoArena();
}
inline void TextualMessage::_internal_set_a_sentence(const std::string& value) {
  
  a_sentence_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void TextualMessage::set_a_sentence(std::string&& value) {
  
  a_sentence_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:demoproto.TextualMessage.a_sentence)
}
inline void TextualMessage::set_a_sentence(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  a_sentence_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:demoproto.TextualMessage.a_sentence)
}
inline void TextualMessage::set_a_sentence(const char* value, size_t size) {
  
  a_sentence_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:demoproto.TextualMessage.a_sentence)
}
inline std::string* TextualMessage::_internal_mutable_a_sentence() {
  
  return a_sentence_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TextualMessage::release_a_sentence() {
  // @@protoc_insertion_point(field_release:demoproto.TextualMessage.a_sentence)
  
  return a_sentence_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TextualMessage::set_allocated_a_sentence(std::string* a_sentence) {
  if (a_sentence != nullptr) {
    
  } else {
    
  }
  a_sentence_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), a_sentence);
  // @@protoc_insertion_point(field_set_allocated:demoproto.TextualMessage.a_sentence)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace demoproto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_DemoProto_2eproto
